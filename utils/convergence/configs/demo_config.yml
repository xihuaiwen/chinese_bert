demo:
    directory: "applications/popart/bert"
    executable:
        - "python3"
        - "bert.py"
    log_output: "stderr"
    log_parsing:
        step_num:
            regex: "Iteration:\\s+(\\d+)"
        epoch_num:
            regex: "Epoch:\\s+([\\d\\.]+)"
        loss: 
            regex: "Loss\\s+\\(MLM\\s+NSP\\):\\s+([\\d\\.]+)\\s+([\\d\\.]+)"
            labels:
                - MLM
                - NSP
        accuracy: 
            regex: "Accuracy\\s+\\(MLM\\s+NSP\\):\\s+([\\d\\.]+)\\s+([\\d\\.]+)"
            labels:
                - MLM
                - NSP
        model_save: 
            regex: "Saving model to: ([^\\s+]+)"
    metrics:
        loss:
            margin: 0.2
            comparison: "<="
        accuracy:
            margin: 0.2
            comparison: ">="
    recording:
        steps_to_record_after_save: 3
    flags:
        common:
            log_steps:
              key: "--steps-per-log"
              value: 1
            config:
                key: "--config"
                value: "configs/demo.json"
        gather:
            checkpoint_output:
                set_in_script: true
                key: "--checkpoint-dir"
            misc:
                save_interval:
                    key: "--epochs-per-save"
                    value: 5
                run_for:
                    key: "--epochs"
                    value: 200
        run:
            checkpoint_input: 
                key: "--onnx-checkpoint"
                set_in_script: true
            start_step:
                key: "--continue-training-from-epoch"
                set_in_script: true
            run_for:
                key: "--epochs"
                set_in_script: true
            misc:
                engine_cache:
                    key: "--engine-cache"
                    value: "__demo_runtest_engine_cache"

